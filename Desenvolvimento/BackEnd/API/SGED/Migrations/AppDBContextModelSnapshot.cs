// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SGED.Context;

#nullable disable

namespace SGED.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SGED.Models.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcidade");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("integer");

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomecidade");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("cidade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEstado = 1,
                            NomeCidade = "Aparecida d'Oeste"
                        },
                        new
                        {
                            Id = 2,
                            IdEstado = 1,
                            NomeCidade = "Jales"
                        },
                        new
                        {
                            Id = 3,
                            IdEstado = 1,
                            NomeCidade = "Palmeira d'Oeste"
                        },
                        new
                        {
                            Id = 4,
                            IdEstado = 1,
                            NomeCidade = "Paranapuã"
                        },
                        new
                        {
                            Id = 5,
                            IdEstado = 1,
                            NomeCidade = "Rubineia"
                        },
                        new
                        {
                            Id = 6,
                            IdEstado = 1,
                            NomeCidade = "Santa Clara d'Oeste"
                        },
                        new
                        {
                            Id = 7,
                            IdEstado = 1,
                            NomeCidade = "Santa Fé do Sul"
                        },
                        new
                        {
                            Id = 8,
                            IdEstado = 1,
                            NomeCidade = "São Francisco"
                        },
                        new
                        {
                            Id = 9,
                            IdEstado = 1,
                            NomeCidade = "São João das Duas Pontes"
                        },
                        new
                        {
                            Id = 10,
                            IdEstado = 1,
                            NomeCidade = "Urânia"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idestado");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomeestado");

                    b.Property<string>("UfEstado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("ufestado");

                    b.HasKey("Id");

                    b.ToTable("estado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeEstado = "São Paulo",
                            UfEstado = "SP"
                        },
                        new
                        {
                            Id = 2,
                            NomeEstado = "Alagoas",
                            UfEstado = "AL"
                        },
                        new
                        {
                            Id = 3,
                            NomeEstado = "Amapá",
                            UfEstado = "AP"
                        },
                        new
                        {
                            Id = 4,
                            NomeEstado = "Amazonas",
                            UfEstado = "AM"
                        },
                        new
                        {
                            Id = 5,
                            NomeEstado = "Bahia",
                            UfEstado = "BA"
                        },
                        new
                        {
                            Id = 6,
                            NomeEstado = "Ceará",
                            UfEstado = "CE"
                        },
                        new
                        {
                            Id = 7,
                            NomeEstado = "Distrito Federal",
                            UfEstado = "DF"
                        },
                        new
                        {
                            Id = 8,
                            NomeEstado = "Espírito Santo",
                            UfEstado = "ES"
                        },
                        new
                        {
                            Id = 9,
                            NomeEstado = "Goiás",
                            UfEstado = "GO"
                        },
                        new
                        {
                            Id = 10,
                            NomeEstado = "Maranhão",
                            UfEstado = "MA"
                        },
                        new
                        {
                            Id = 11,
                            NomeEstado = "Mato Grosso",
                            UfEstado = "MT"
                        },
                        new
                        {
                            Id = 12,
                            NomeEstado = "Mato Grosso do Sul",
                            UfEstado = "MS"
                        },
                        new
                        {
                            Id = 13,
                            NomeEstado = "Minas Gerais",
                            UfEstado = "MG"
                        },
                        new
                        {
                            Id = 14,
                            NomeEstado = "Pará",
                            UfEstado = "PA"
                        },
                        new
                        {
                            Id = 15,
                            NomeEstado = "Paraíba",
                            UfEstado = "PB"
                        },
                        new
                        {
                            Id = 16,
                            NomeEstado = "Paraná",
                            UfEstado = "PR"
                        },
                        new
                        {
                            Id = 17,
                            NomeEstado = "Pernambuco",
                            UfEstado = "PE"
                        },
                        new
                        {
                            Id = 18,
                            NomeEstado = "Piauí",
                            UfEstado = "PI"
                        },
                        new
                        {
                            Id = 19,
                            NomeEstado = "Rio de Janeiro",
                            UfEstado = "RJ"
                        },
                        new
                        {
                            Id = 20,
                            NomeEstado = "Rio Grande do Norte",
                            UfEstado = "RN"
                        },
                        new
                        {
                            Id = 21,
                            NomeEstado = "Rio Grande do Sul",
                            UfEstado = "RS"
                        },
                        new
                        {
                            Id = 22,
                            NomeEstado = "Rondônia",
                            UfEstado = "RO"
                        },
                        new
                        {
                            Id = 23,
                            NomeEstado = "Roraima",
                            UfEstado = "RR"
                        },
                        new
                        {
                            Id = 24,
                            NomeEstado = "Santa Catarina",
                            UfEstado = "SC"
                        },
                        new
                        {
                            Id = 25,
                            NomeEstado = "Acre",
                            UfEstado = "AC"
                        },
                        new
                        {
                            Id = 26,
                            NomeEstado = "Sergipe",
                            UfEstado = "SE"
                        },
                        new
                        {
                            Id = 27,
                            NomeEstado = "Tocantins",
                            UfEstado = "TO"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Municipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmunicipe");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCNPJPessoa")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cpfcnpjpessoa");

                    b.Property<string>("EmailPessoa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emailpessoa");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("nomepessoa");

                    b.Property<string>("RgIEPessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("rgiepessoa");

                    b.Property<string>("TelefonePessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefonepessoa");

                    b.HasKey("Id");

                    b.ToTable("municipe");
                });

            modelBuilder.Entity("SGED.Models.Entities.TipoLogradouro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtipologradouro");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoInformativo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("codigoinformativo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("descricaotipologradouro");

                    b.HasKey("Id");

                    b.ToTable("tipologradouro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoInformativo = "A",
                            Descricao = "Área"
                        },
                        new
                        {
                            Id = 2,
                            CodigoInformativo = "AC",
                            Descricao = "Acesso"
                        },
                        new
                        {
                            Id = 3,
                            CodigoInformativo = "ACA",
                            Descricao = "Acampamento"
                        },
                        new
                        {
                            Id = 4,
                            CodigoInformativo = "ACL",
                            Descricao = "Acesso Local"
                        },
                        new
                        {
                            Id = 5,
                            CodigoInformativo = "AD",
                            Descricao = "Adro"
                        },
                        new
                        {
                            Id = 6,
                            CodigoInformativo = "AE",
                            Descricao = "Área Especial"
                        },
                        new
                        {
                            Id = 7,
                            CodigoInformativo = "AER",
                            Descricao = "Aeroporto"
                        },
                        new
                        {
                            Id = 8,
                            CodigoInformativo = "AL",
                            Descricao = "Alameda"
                        },
                        new
                        {
                            Id = 9,
                            CodigoInformativo = "AMD",
                            Descricao = "Avenida Marginal Direita"
                        },
                        new
                        {
                            Id = 10,
                            CodigoInformativo = "AME",
                            Descricao = "Avenida Marginal Esquerda"
                        },
                        new
                        {
                            Id = 11,
                            CodigoInformativo = "AN",
                            Descricao = "Anel Viário"
                        },
                        new
                        {
                            Id = 12,
                            CodigoInformativo = "ANT",
                            Descricao = "Antiga Estrada"
                        },
                        new
                        {
                            Id = 13,
                            CodigoInformativo = "ART",
                            Descricao = "Artéria"
                        },
                        new
                        {
                            Id = 14,
                            CodigoInformativo = "AT",
                            Descricao = "Alto"
                        },
                        new
                        {
                            Id = 15,
                            CodigoInformativo = "ATL",
                            Descricao = "Atalho"
                        },
                        new
                        {
                            Id = 16,
                            CodigoInformativo = "A V",
                            Descricao = "Área Verde"
                        },
                        new
                        {
                            Id = 17,
                            CodigoInformativo = "AV",
                            Descricao = "Avenida"
                        },
                        new
                        {
                            Id = 18,
                            CodigoInformativo = "AV",
                            Descricao = "Avenida"
                        },
                        new
                        {
                            Id = 19,
                            CodigoInformativo = "AVC",
                            Descricao = "Avenida do Contorno"
                        },
                        new
                        {
                            Id = 20,
                            CodigoInformativo = "AVM",
                            Descricao = "Avenida Marginal"
                        },
                        new
                        {
                            Id = 21,
                            CodigoInformativo = "AVV",
                            Descricao = "Avenida Velha"
                        },
                        new
                        {
                            Id = 22,
                            CodigoInformativo = "BAL",
                            Descricao = "Balneário"
                        },
                        new
                        {
                            Id = 23,
                            CodigoInformativo = "BC",
                            Descricao = "Beco"
                        },
                        new
                        {
                            Id = 24,
                            CodigoInformativo = "BCO",
                            Descricao = "Buraco"
                        },
                        new
                        {
                            Id = 25,
                            CodigoInformativo = "BEL",
                            Descricao = "Belvedere"
                        },
                        new
                        {
                            Id = 26,
                            CodigoInformativo = "BL",
                            Descricao = "Bloco"
                        },
                        new
                        {
                            Id = 27,
                            CodigoInformativo = "BLO",
                            Descricao = "Balão"
                        },
                        new
                        {
                            Id = 28,
                            CodigoInformativo = "BLS",
                            Descricao = "Blocos"
                        },
                        new
                        {
                            Id = 29,
                            CodigoInformativo = "BLV",
                            Descricao = "Bulevar"
                        },
                        new
                        {
                            Id = 30,
                            CodigoInformativo = "BSQ",
                            Descricao = "Bosque"
                        },
                        new
                        {
                            Id = 31,
                            CodigoInformativo = "BVD",
                            Descricao = "Boulevard"
                        },
                        new
                        {
                            Id = 32,
                            CodigoInformativo = "BX",
                            Descricao = "Baixa"
                        },
                        new
                        {
                            Id = 33,
                            CodigoInformativo = "C",
                            Descricao = "Cais"
                        },
                        new
                        {
                            Id = 34,
                            CodigoInformativo = "CAL",
                            Descricao = "Calçada"
                        },
                        new
                        {
                            Id = 35,
                            CodigoInformativo = "CAM",
                            Descricao = "Caminho"
                        },
                        new
                        {
                            Id = 36,
                            CodigoInformativo = "CAN",
                            Descricao = "Canal"
                        },
                        new
                        {
                            Id = 37,
                            CodigoInformativo = "CH",
                            Descricao = "Chácara"
                        },
                        new
                        {
                            Id = 38,
                            CodigoInformativo = "CHA",
                            Descricao = "Chapadão"
                        },
                        new
                        {
                            Id = 39,
                            CodigoInformativo = "CIC",
                            Descricao = "Ciclovia"
                        },
                        new
                        {
                            Id = 40,
                            CodigoInformativo = "CIR",
                            Descricao = "Circular"
                        },
                        new
                        {
                            Id = 41,
                            CodigoInformativo = "CJ",
                            Descricao = "Conjunto"
                        },
                        new
                        {
                            Id = 42,
                            CodigoInformativo = "CJM",
                            Descricao = "Conjunto Multirão"
                        },
                        new
                        {
                            Id = 43,
                            CodigoInformativo = "CMP",
                            Descricao = "Complexo Viário"
                        },
                        new
                        {
                            Id = 44,
                            CodigoInformativo = "COL",
                            Descricao = "Colônia"
                        },
                        new
                        {
                            Id = 45,
                            CodigoInformativo = "COM",
                            Descricao = "Comunidade"
                        },
                        new
                        {
                            Id = 46,
                            CodigoInformativo = "CON",
                            Descricao = "Condomínio"
                        },
                        new
                        {
                            Id = 47,
                            CodigoInformativo = "COR",
                            Descricao = "Corredor"
                        },
                        new
                        {
                            Id = 48,
                            CodigoInformativo = "CPO",
                            Descricao = "Campo"
                        },
                        new
                        {
                            Id = 49,
                            CodigoInformativo = "CRG",
                            Descricao = "Córrego"
                        },
                        new
                        {
                            Id = 50,
                            CodigoInformativo = "CTN",
                            Descricao = "Contorno"
                        },
                        new
                        {
                            Id = 51,
                            CodigoInformativo = "DSC",
                            Descricao = "Descida"
                        },
                        new
                        {
                            Id = 52,
                            CodigoInformativo = "DSV",
                            Descricao = "Desvio"
                        },
                        new
                        {
                            Id = 53,
                            CodigoInformativo = "DT",
                            Descricao = "Distrito"
                        },
                        new
                        {
                            Id = 54,
                            CodigoInformativo = "EB",
                            Descricao = "Entre Bloco"
                        },
                        new
                        {
                            Id = 55,
                            CodigoInformativo = "EIM",
                            Descricao = "Estrada Intermunicipal"
                        },
                        new
                        {
                            Id = 56,
                            CodigoInformativo = "ENS",
                            Descricao = "Enseada"
                        },
                        new
                        {
                            Id = 57,
                            CodigoInformativo = "ENT",
                            Descricao = "Entrada Particular"
                        },
                        new
                        {
                            Id = 58,
                            CodigoInformativo = "EQ",
                            Descricao = "Entre Quadra"
                        },
                        new
                        {
                            Id = 59,
                            CodigoInformativo = "ESC",
                            Descricao = "Escada"
                        },
                        new
                        {
                            Id = 60,
                            CodigoInformativo = "ESD",
                            Descricao = "Escadaria"
                        },
                        new
                        {
                            Id = 61,
                            CodigoInformativo = "ESE",
                            Descricao = "Estrada Estadual"
                        },
                        new
                        {
                            Id = 62,
                            CodigoInformativo = "ESI",
                            Descricao = "Estrada Vicinal"
                        },
                        new
                        {
                            Id = 63,
                            CodigoInformativo = "ESL",
                            Descricao = "Estrada de Ligação"
                        },
                        new
                        {
                            Id = 64,
                            CodigoInformativo = "ESM",
                            Descricao = "Estrada Municipal"
                        },
                        new
                        {
                            Id = 65,
                            CodigoInformativo = "ESP",
                            Descricao = "Esplanada"
                        },
                        new
                        {
                            Id = 66,
                            CodigoInformativo = "ESS",
                            Descricao = "Estrada de Servidão"
                        },
                        new
                        {
                            Id = 67,
                            CodigoInformativo = "EST",
                            Descricao = "Estrada"
                        },
                        new
                        {
                            Id = 68,
                            CodigoInformativo = "ESV",
                            Descricao = "Estrada Velha"
                        },
                        new
                        {
                            Id = 69,
                            CodigoInformativo = "ETA",
                            Descricao = "Estrada Antiga"
                        },
                        new
                        {
                            Id = 70,
                            CodigoInformativo = "ETC",
                            Descricao = "Estação"
                        },
                        new
                        {
                            Id = 71,
                            CodigoInformativo = "ETD",
                            Descricao = "Estádio"
                        },
                        new
                        {
                            Id = 72,
                            CodigoInformativo = "ETN",
                            Descricao = "Estância"
                        },
                        new
                        {
                            Id = 73,
                            CodigoInformativo = "ETP",
                            Descricao = "Estrada Particular"
                        },
                        new
                        {
                            Id = 74,
                            CodigoInformativo = "ETT",
                            Descricao = "Estacionamento"
                        },
                        new
                        {
                            Id = 75,
                            CodigoInformativo = "EVA",
                            Descricao = "Evangélica"
                        },
                        new
                        {
                            Id = 76,
                            CodigoInformativo = "EVD",
                            Descricao = "Elevada"
                        },
                        new
                        {
                            Id = 77,
                            CodigoInformativo = "EX",
                            Descricao = "Eixo Industrial"
                        },
                        new
                        {
                            Id = 78,
                            CodigoInformativo = "FAV",
                            Descricao = "Favela"
                        },
                        new
                        {
                            Id = 79,
                            CodigoInformativo = "FAZ",
                            Descricao = "Fazenda"
                        },
                        new
                        {
                            Id = 80,
                            CodigoInformativo = "FER",
                            Descricao = "Ferrovia"
                        },
                        new
                        {
                            Id = 81,
                            CodigoInformativo = "FNT",
                            Descricao = "Fonte"
                        },
                        new
                        {
                            Id = 82,
                            CodigoInformativo = "FRA",
                            Descricao = "Feira"
                        },
                        new
                        {
                            Id = 83,
                            CodigoInformativo = "FTE",
                            Descricao = "Forte"
                        },
                        new
                        {
                            Id = 84,
                            CodigoInformativo = "GAL",
                            Descricao = "Galeria"
                        },
                        new
                        {
                            Id = 85,
                            CodigoInformativo = "GJA",
                            Descricao = "Granja"
                        },
                        new
                        {
                            Id = 86,
                            CodigoInformativo = "HAB",
                            Descricao = "Núcleo Habitacional"
                        },
                        new
                        {
                            Id = 87,
                            CodigoInformativo = "IA",
                            Descricao = "Ilha"
                        },
                        new
                        {
                            Id = 88,
                            CodigoInformativo = "IND",
                            Descricao = "Indeterminado"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtipousuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoTipoUsuario")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("descricaotipousuario");

                    b.Property<string>("NivelAcesso")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("nivelacesso");

                    b.Property<string>("NomeTipoUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("nometipousuario");

                    b.HasKey("Id");

                    b.ToTable("tipousuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescricaoTipoUsuario = "Entidade voltada ao time de desenvolvimento para uso da plataforma durante testes.",
                            NivelAcesso = "A",
                            NomeTipoUsuario = "Desenvolvedor"
                        },
                        new
                        {
                            Id = 2,
                            DescricaoTipoUsuario = "Entidade administrativa do orgão da Secretária.",
                            NivelAcesso = "A",
                            NomeTipoUsuario = "Administrador"
                        },
                        new
                        {
                            Id = 3,
                            DescricaoTipoUsuario = "Entidade de suporte para a comunidade local.",
                            NivelAcesso = "B",
                            NomeTipoUsuario = "Funcionário"
                        },
                        new
                        {
                            Id = 4,
                            DescricaoTipoUsuario = "Entidade que representa empresas, instituições ou qualquer entidade jurídica perante a lei.",
                            NivelAcesso = "C",
                            NomeTipoUsuario = "Jurídico"
                        },
                        new
                        {
                            Id = 5,
                            DescricaoTipoUsuario = "Entidade que representa todos os munícipes da cidade.",
                            NivelAcesso = "D",
                            NomeTipoUsuario = "Físico"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idusuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CargoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cargousuario");

                    b.Property<string>("CpfCNPJPessoa")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cpfcnpjpessoa");

                    b.Property<string>("EmailPessoa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emailpessoa");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("nomepessoa");

                    b.Property<string>("RgIEPessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("rgiepessoa");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("senhausuario");

                    b.Property<bool>("StatusUsuario")
                        .HasColumnType("boolean")
                        .HasColumnName("statususuario");

                    b.Property<string>("TelefonePessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefonepessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargoUsuario = "Desenvolvimento",
                            CpfCNPJPessoa = "000.000.000-00",
                            EmailPessoa = "devops@development.com",
                            IdTipoUsuario = 1,
                            NomePessoa = "Dev",
                            RgIEPessoa = "00.000.000-0",
                            SenhaUsuario = "123456",
                            StatusUsuario = true,
                            TelefonePessoa = "(00) 00000-0000"
                        },
                        new
                        {
                            Id = 2,
                            CargoUsuario = "Secretário Geral",
                            CpfCNPJPessoa = "000.000.000-00",
                            EmailPessoa = "admin@gmail.com",
                            IdTipoUsuario = 2,
                            NomePessoa = "Secretário Geral",
                            RgIEPessoa = "00.000.000-0",
                            SenhaUsuario = "987654",
                            StatusUsuario = true,
                            TelefonePessoa = "(00) 00000-0000"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Cidade", b =>
                {
                    b.HasOne("SGED.Models.Entities.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SGED.Models.Entities.Usuario", b =>
                {
                    b.HasOne("SGED.Models.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("SGED.Models.Entities.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("SGED.Models.Entities.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
