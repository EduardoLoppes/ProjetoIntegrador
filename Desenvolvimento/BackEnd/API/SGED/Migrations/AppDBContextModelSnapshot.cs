// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SGED.Context;

#nullable disable

namespace SGED.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SGED.Models.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcidade");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("integer");

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomecidade");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("cidade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEstado = 25,
                            NomeCidade = "Aparecida d'Oeste"
                        },
                        new
                        {
                            Id = 2,
                            IdEstado = 25,
                            NomeCidade = "Jales"
                        },
                        new
                        {
                            Id = 3,
                            IdEstado = 25,
                            NomeCidade = "Palmeira d'Oeste"
                        },
                        new
                        {
                            Id = 4,
                            IdEstado = 25,
                            NomeCidade = "Paranapuã"
                        },
                        new
                        {
                            Id = 5,
                            IdEstado = 25,
                            NomeCidade = "Rubineia"
                        },
                        new
                        {
                            Id = 6,
                            IdEstado = 25,
                            NomeCidade = "Santa Clara d'Oeste"
                        },
                        new
                        {
                            Id = 7,
                            IdEstado = 25,
                            NomeCidade = "Santa Fé do Sul"
                        },
                        new
                        {
                            Id = 8,
                            IdEstado = 25,
                            NomeCidade = "São Francisco"
                        },
                        new
                        {
                            Id = 9,
                            IdEstado = 25,
                            NomeCidade = "São João das Duas Pontes"
                        },
                        new
                        {
                            Id = 10,
                            IdEstado = 25,
                            NomeCidade = "Urânia"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idestado");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEstado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomeestado");

                    b.Property<string>("UfEstado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("ufestado");

                    b.HasKey("Id");

                    b.ToTable("estado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeEstado = "Acre",
                            UfEstado = "AC"
                        },
                        new
                        {
                            Id = 2,
                            NomeEstado = "Alagoas",
                            UfEstado = "AL"
                        },
                        new
                        {
                            Id = 3,
                            NomeEstado = "Amapá",
                            UfEstado = "AP"
                        },
                        new
                        {
                            Id = 4,
                            NomeEstado = "Amazonas",
                            UfEstado = "AM"
                        },
                        new
                        {
                            Id = 5,
                            NomeEstado = "Bahia",
                            UfEstado = "BA"
                        },
                        new
                        {
                            Id = 6,
                            NomeEstado = "Ceará",
                            UfEstado = "CE"
                        },
                        new
                        {
                            Id = 7,
                            NomeEstado = "Distrito Federal",
                            UfEstado = "DF"
                        },
                        new
                        {
                            Id = 8,
                            NomeEstado = "Espírito Santo",
                            UfEstado = "ES"
                        },
                        new
                        {
                            Id = 9,
                            NomeEstado = "Goiás",
                            UfEstado = "GO"
                        },
                        new
                        {
                            Id = 10,
                            NomeEstado = "Maranhão",
                            UfEstado = "MA"
                        },
                        new
                        {
                            Id = 11,
                            NomeEstado = "Mato Grosso",
                            UfEstado = "MT"
                        },
                        new
                        {
                            Id = 12,
                            NomeEstado = "Mato Grosso do Sul",
                            UfEstado = "MS"
                        },
                        new
                        {
                            Id = 13,
                            NomeEstado = "Minas Gerais",
                            UfEstado = "MG"
                        },
                        new
                        {
                            Id = 14,
                            NomeEstado = "Pará",
                            UfEstado = "PA"
                        },
                        new
                        {
                            Id = 15,
                            NomeEstado = "Paraíba",
                            UfEstado = "PB"
                        },
                        new
                        {
                            Id = 16,
                            NomeEstado = "Paraná",
                            UfEstado = "PR"
                        },
                        new
                        {
                            Id = 17,
                            NomeEstado = "Pernambuco",
                            UfEstado = "PE"
                        },
                        new
                        {
                            Id = 18,
                            NomeEstado = "Piauí",
                            UfEstado = "PI"
                        },
                        new
                        {
                            Id = 19,
                            NomeEstado = "Rio de Janeiro",
                            UfEstado = "RJ"
                        },
                        new
                        {
                            Id = 20,
                            NomeEstado = "Rio Grande do Norte",
                            UfEstado = "RN"
                        },
                        new
                        {
                            Id = 21,
                            NomeEstado = "Rio Grande do Sul",
                            UfEstado = "RS"
                        },
                        new
                        {
                            Id = 22,
                            NomeEstado = "Rondônia",
                            UfEstado = "RO"
                        },
                        new
                        {
                            Id = 23,
                            NomeEstado = "Roraima",
                            UfEstado = "RR"
                        },
                        new
                        {
                            Id = 24,
                            NomeEstado = "Santa Catarina",
                            UfEstado = "SC"
                        },
                        new
                        {
                            Id = 25,
                            NomeEstado = "São Paulo",
                            UfEstado = "SP"
                        },
                        new
                        {
                            Id = 26,
                            NomeEstado = "Sergipe",
                            UfEstado = "SE"
                        },
                        new
                        {
                            Id = 27,
                            NomeEstado = "Tocantins",
                            UfEstado = "TO"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Municipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmunicipe");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCNPJPessoa")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cpfcnpjpessoa");

                    b.Property<string>("EmailPessoa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emailpessoa");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("nomepessoa");

                    b.Property<string>("RgIEPessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("rgiepessoa");

                    b.Property<string>("TelefonePessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefonepessoa");

                    b.HasKey("Id");

                    b.ToTable("municipe");
                });

            modelBuilder.Entity("SGED.Models.Entities.TipoLogradouro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtipologradouro");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(58)
                        .HasColumnType("character varying(58)")
                        .HasColumnName("rua");

                    b.HasKey("Id");

                    b.ToTable("tipologradouro");
                });

            modelBuilder.Entity("SGED.Models.Entities.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtipousuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoTipoUsuario")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("descricaotipousuario");

                    b.Property<string>("NivelAcesso")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("nivelacesso");

                    b.Property<string>("NomeTipoUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("nometipousuario");

                    b.HasKey("Id");

                    b.ToTable("tipousuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescricaoTipoUsuario = "Entidade voltada ao time de desenvolvimento para uso da plataforma durante testes.",
                            NivelAcesso = "A",
                            NomeTipoUsuario = "Desenvolvedor"
                        },
                        new
                        {
                            Id = 2,
                            DescricaoTipoUsuario = "Entidade administrativa do orgão da Secretária.",
                            NivelAcesso = "A",
                            NomeTipoUsuario = "Administrador"
                        },
                        new
                        {
                            Id = 3,
                            DescricaoTipoUsuario = "Entidade de suporte para a comunidade local.",
                            NivelAcesso = "B",
                            NomeTipoUsuario = "Funcionário"
                        },
                        new
                        {
                            Id = 4,
                            DescricaoTipoUsuario = "Entidade que representa empresas, instituições ou qualquer entidade jurídica perante a lei.",
                            NivelAcesso = "C",
                            NomeTipoUsuario = "Jurídico"
                        },
                        new
                        {
                            Id = 5,
                            DescricaoTipoUsuario = "Entidade que representa todos os munícipes da cidade.",
                            NivelAcesso = "D",
                            NomeTipoUsuario = "Físico"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idusuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CargoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cargousuario");

                    b.Property<string>("CpfCNPJPessoa")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("cpfcnpjpessoa");

                    b.Property<string>("EmailPessoa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emailpessoa");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("nomepessoa");

                    b.Property<string>("RgIEPessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("rgiepessoa");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("senhausuario");

                    b.Property<bool>("StatusUsuario")
                        .HasColumnType("boolean")
                        .HasColumnName("statususuario");

                    b.Property<string>("TelefonePessoa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefonepessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargoUsuario = "Desenvolvimento",
                            CpfCNPJPessoa = "000.000.000-00",
                            EmailPessoa = "devops@development.com",
                            IdTipoUsuario = 1,
                            NomePessoa = "Dev",
                            RgIEPessoa = "00.000.000-0",
                            SenhaUsuario = "123456",
                            StatusUsuario = true,
                            TelefonePessoa = "(00) 00000-0000"
                        },
                        new
                        {
                            Id = 2,
                            CargoUsuario = "Secretário Geral",
                            CpfCNPJPessoa = "000.000.000-00",
                            EmailPessoa = "admin@gmail.com",
                            IdTipoUsuario = 2,
                            NomePessoa = "Secretário Geral",
                            RgIEPessoa = "00.000.000-0",
                            SenhaUsuario = "987654",
                            StatusUsuario = true,
                            TelefonePessoa = "(00) 00000-0000"
                        });
                });

            modelBuilder.Entity("SGED.Models.Entities.Cidade", b =>
                {
                    b.HasOne("SGED.Models.Entities.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SGED.Models.Entities.Usuario", b =>
                {
                    b.HasOne("SGED.Models.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("SGED.Models.Entities.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("SGED.Models.Entities.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
